package br.com.rodrock.bollyfilmes;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.ListView;
import android.widget.Toast;

import java.util.ArrayList;

public class BlankFragment extends Fragment {

    private int posicaoItem = ListView.INVALID_POSITION;

    private static final String KEY_POSITION = "SELECIONADO";

    private ListView list;

    private boolean useFilmeDestaque = false;

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setHasOptionsMenu(true);

    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState)
    {

        View view = inflater.inflate(R.layout.fragment_blank,container,false);

        list = view.findViewById(R.id.list_filmes);

        final ArrayList<ItemFilme> arrayList = new ArrayList<>();
        arrayList.add(new ItemFilme("Homem aranha"," Filme de herói que foi picado por uma aranha", "10/04/2016", 2.5f));
        arrayList.add(new ItemFilme("Homem de Ferro"," Filme de herói que constrói uma armadura de aço para fugir de terrorista", "01/06/2017", 4));
        arrayList.add(new ItemFilme("Vingadores"," Filme de heróis que se unem para combater uma ameaça a terra", "10/04/2016", 3.5f));
        arrayList.add(new ItemFilme("Liga da Justiça","Batman reune seua amigos para combater um dos maiores vilões de todos os tempos", "10/05/2017", 4.5f));
        arrayList.add(new ItemFilme("Pantera Negra","Em Wakanda vive um rei e herói que usa uma tecnologia super avançada no combate ao crime", "05/03/2018", 5));
        arrayList.add(new ItemFilme("Capitão América","Durante a guerra um jovem combatente é usado em experimento militar onde adquiri uma força sobrehumana", "10/04/2016", 3.5f));
        arrayList.add(new ItemFilme("Extraordinário","Uma crinça nasce com uma doença que deixa seu rosto diferente dos demais e precisa aprender a lidar com esse problema", "10/04/2016", 4));

        FilmesAdapter adapter = new FilmesAdapter(getContext(), arrayList);
        adapter.setUseFilmeDestaque(useFilmeDestaque);

        list.setAdapter(adapter);

        list.setOnItemClickListener(new AdapterView.OnItemClickListener()

        {
            @Override
            public void onItemClick(AdapterView<?> adapterView, View view, int position, long l)

            {
                ItemFilme itemFilme = arrayList.get(position);
                Callback callback = (Callback) getActivity();
                callback.onItemSelected(itemFilme);
                posicaoItem = position;
            }
        });
        if (savedInstanceState != null && savedInstanceState.containsKey(KEY_POSITION)){
            posicaoItem = savedInstanceState.getInt(KEY_POSITION);
        }
             return view;
    }

    @Override
    public void onSaveInstanceState(Bundle outState) {
        if (posicaoItem != ListView.INVALID_POSITION){
            outState.putInt(KEY_POSITION, posicaoItem);
        }
        super.onSaveInstanceState(outState);
    }

    @Override
    public void onViewStateRestored(@Nullable Bundle savedInstanceState) {
        if (posicaoItem != ListView.INVALID_POSITION && list != null){
            list.smoothScrollToPosition(posicaoItem);

        }
        super.onViewStateRestored(savedInstanceState);
    }

    @Override
    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater)
    {
      inflater.inflate(R.menu.menu, menu);
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item)
    {
        switch (item.getItemId())
        {
            case R.id.menu_atualizar:
                Toast.makeText(getContext(), "Atualizando os filmes...", Toast.LENGTH_LONG).show();
                return true;
            default:
                return super.onOptionsItemSelected(item);
        }
    }
    public void setUseFilmeDestaque(boolean useFilmeDestaque) {
        this.useFilmeDestaque = useFilmeDestaque;
    }
    public interface Callback{
        void onItemSelected(ItemFilme itemFilme);
    }
}


